# GitHub Actions optimized Dockerfile - reduced layers and disk usage
FROM nvidia/cuda:12.6.3-cudnn-runtime-ubuntu22.04

ENV WORKDIR=/root
ENV PATH="${WORKDIR}/venv/bin:$PATH"
WORKDIR ${WORKDIR}

# Single RUN layer to minimize disk usage - combine all operations
RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
    apt-get update && \
    # Install git-lfs and essential packages in one go
    curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash && \
    apt-get install -y \
        python3.11 \
        python3.11-venv \
        git-lfs \
        libgl1-mesa-glx \
        libglib2.0-0 \
        curl && \
    # Create Python virtual environment
    python3.11 -m venv venv && \
    # Clean apt cache immediately to save space
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    # Setup git-lfs
    git lfs install

# Copy only essential files first
COPY requirements.txt ./
COPY run.bash ./

# Install Python dependencies in single layer
RUN pip install --no-cache-dir torch torchvision --index-url https://download.pytorch.org/whl/cu126 && \
    pip install --no-cache-dir -r requirements.txt && \
    # Clean pip cache
    pip cache purge

# Copy remaining files - do this last to leverage Docker cache
COPY . ${WORKDIR}

# Final cleanup and git operations in single layer
RUN rm -rf .git/hooks && \
    git lfs pull && \
    git submodule update --init --recursive && \
    # Remove any unnecessary files to save space
    find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true && \
    find . -name "*.pyc" -delete 2>/dev/null || true

CMD ["bash", "run.bash"]
