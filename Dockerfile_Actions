# Multi-stage build Dockerfile - optimized for size and build efficiency
# Stage 1: Python dependencies builder
FROM nvidia/cuda:12.6.3-cudnn-runtime-ubuntu22.04 AS python-builder

ENV WORKDIR=/root
WORKDIR ${WORKDIR}

# Install Python and create virtual environment
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        python3.11 \
        python3.11-venv \
        python3.11-dev \
        gcc \
        g++ \
        && \
    python3.11 -m venv venv && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt ./
RUN . venv/bin/activate && \
    pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir torch torchvision --index-url https://download.pytorch.org/whl/cu126 && \
    pip install --no-cache-dir -r requirements.txt && \
    # Clean up unnecessary files in venv
    find venv -name "*.pyc" -delete && \
    find venv -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true && \
    find venv/lib -name "*.pyi" -delete && \
    find venv/lib -name "tests" -type d -exec rm -rf {} + 2>/dev/null || true && \
    find venv/lib -name "test" -type d -exec rm -rf {} + 2>/dev/null || true

# Stage 2: Git LFS operations
FROM nvidia/cuda:12.6.3-cudnn-runtime-ubuntu22.04 AS git-stage

ENV WORKDIR=/root
WORKDIR ${WORKDIR}

# Install git and git-lfs
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        curl \
        ca-certificates \
        git && \
    curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash && \
    apt-get install -y --no-install-recommends git-lfs && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    git lfs install

# Copy source code and perform git operations
COPY . ${WORKDIR}
RUN rm -rf .git/hooks && \
    git lfs pull && \
    git submodule update --init --recursive && \
    # Remove git directories to save space
    find . -name ".git" -type d -exec rm -rf {} + 2>/dev/null || true && \
    # Clean up unnecessary files
    find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true && \
    find . -name "*.pyc" -delete 2>/dev/null || true && \
    find . -name "*.pyo" -delete 2>/dev/null || true

# Stage 3: Final runtime image
FROM nvidia/cuda:12.6.3-cudnn-runtime-ubuntu22.04 AS runtime

ENV WORKDIR=/root
ENV PATH="${WORKDIR}/venv/bin:$PATH"
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
WORKDIR ${WORKDIR}

# Install only runtime dependencies
RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        python3.11 \
        libgl1-mesa-glx \
        libglib2.0-0 \
        libgomp1 \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Copy virtual environment from builder stage
COPY --from=python-builder ${WORKDIR}/venv ${WORKDIR}/venv

# Copy application code from git stage
COPY --from=git-stage ${WORKDIR} ${WORKDIR}

# Create symlink for python if needed
RUN ln -sf /usr/bin/python3.11 /usr/bin/python3 || true

CMD ["bash", "run.bash"]